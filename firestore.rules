// firestore.rules
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function signedIn() { return request.auth != null; }

    // USERS — only the user can read/write their own doc
    match /users/{uid} {
      allow read: if signedIn() && uid == request.auth.uid;
      allow create: if signedIn()
        && uid == request.auth.uid
        && request.resource.data.uid == request.auth.uid;
      allow update, delete: if signedIn() && uid == request.auth.uid;
    }

    // PROJECTS — any signed-in user can read; only owner can write
    match /projects/{projectId} {
      allow read: if signedIn();
      allow create: if signedIn()
        && request.resource.data.ownerUid == request.auth.uid;
      allow update, delete: if signedIn()
        && resource.data.ownerUid == request.auth.uid;
    }

    // INVOICES — owner-only writes; everyone signed-in can read
    match /invoices/{invoiceId} {
      allow read: if signedIn();
      allow create: if signedIn()
        && request.resource.data.ownerUid == request.auth.uid;
      allow update, delete: if signedIn()
        && resource.data.ownerUid == request.auth.uid;
    }

    // TASKS — owner-only writes; everyone signed-in can read
    match /tasks/{taskId} {
      allow read: if signedIn();
      allow create: if signedIn()
        && request.resource.data.ownerUid == request.auth.uid;
      allow update, delete: if signedIn()
        && resource.data.ownerUid == request.auth.uid;
    }

    // SUBPHASE TEMPLATES — owner-only writes; everyone signed-in can read
    match /task_templates/{id} {
      allow read: if signedIn();
      allow create: if signedIn()
        && request.resource.data.ownerUid == request.auth.uid;
      allow update, delete: if signedIn()
        && resource.data.ownerUid == request.auth.uid;
    }

    // PHASES — owner-only writes; everyone signed-in can read
    // Documents look like:
    // {
    //   ownerUid: string,
    //   phaseCode: string,   // e.g. "01"
    //   phaseName: string,   // e.g. "Land Use"
    //   order?: number,
    //   createdAt?: timestamp (server),
    //   updatedAt?: timestamp (server)
    // }
    match /phases/{phaseId} {
      allow read: if signedIn();
      allow create: if signedIn()
        && request.resource.data.ownerUid == request.auth.uid;
      allow update, delete: if signedIn()
        && resource.data.ownerUid == request.auth.uid;
    }

    match /city_inspect/{id} {
      allow read: if signedIn();
      allow create: if signedIn()
        && request.resource.data.ownerUid == request.auth.uid;
      allow update, delete: if signedIn()
        && resource.data.ownerUid == request.auth.uid;
    }
  }
}
